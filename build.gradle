plugins {
    id("fabric-loom").version("0.12-SNAPSHOT")
    id("maven-publish")
    id("org.ajoberstar.grgit").version("4.1.0")
    id("com.modrinth.minotaur").version("1.2.1")
}

String real_version = "${project.mod_version}"

if (project.pre_release != "") {
    real_version += "-${project.pre_release}+"
    real_version += grgit.head().abbreviatedId
}

setVersion(real_version)
setGroup(project.maven_group)


dependencies {
    minecraft("com.mojang:minecraft:${project.minecraft_version}")

    modCompileOnly("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}")
    modCompileOnly("curse.maven:malilib-303119:${project.malilib_version}")
    modCompileOnly("curse.maven:xaeros-world-map-317780:${project.xaero_world_map_version}")
    modCompileOnly("curse.maven:xaeros-minimap-263420:${project.xaero_minimap_version}")
    modCompileOnly("curse.maven:ommc-454900:${project.ommc_version}")

    if (project.gradle.startParameter.projectDir != null &&
            !project.gradle.startParameter.projectDir.getName().startsWith("xaero_map_addition-compat")) {
        modRuntimeOnly("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}")
        modRuntimeOnly("curse.maven:modmenu-308702:${project.modmenu_version}")
        modRuntimeOnly("curse.maven:malilib-303119:${project.malilib_version}")
        modRuntimeOnly("curse.maven:xaeros-world-map-317780:${project.xaero_world_map_version}")
        modRuntimeOnly("curse.maven:xaeros-minimap-263420:${project.xaero_minimap_version}")
        modRuntimeOnly("curse.maven:ommc-454900:${project.ommc_version}")
        modRuntimeOnly("curse.maven:imblockerfabric-399225:${project.imblockerfabric}")
        runtimeOnly(fileTree(dir: "xaero_map_addition-compat-mc1_18/build/devlibs", include: ["*-dev.jar"]))
    }

    subprojects.each {
        include project("${it.name}:")
    }

}

allprojects {
    apply plugin: "maven-publish"
    apply plugin: "fabric-loom"

    loom.runConfigs.configureEach {
        property("mixin.debug.export", "true")
    }

    version = rootProject.version
    group = rootProject.group

    repositories {
        maven {
            url 'https://www.cursemaven.com/'
        }
        maven {
            url = "https://api.modrinth.com/maven"
        }
        maven {
            url 'https://maven.hendrixshen.top'
        }
        mavenCentral()
    }

    dependencies {
        mappings(loom.officialMojangMappings())
        modImplementation("net.fabricmc:fabric-loader:${rootProject.loader_version}")
        modCompileOnly("top.hendrixshen.magiclib:magiclib:${project.magiclib_version}")

        modRuntimeOnly("curse.maven:lazydfu-433518:${rootProject.lazydfu_version}")
        //modRuntimeOnly("curse.maven:imblockerfabric-399225:${rootProject.imblockerfabric}")
    }

    runClient {
        defaultCharacterEncoding = "UTF-8"
    }

    runServer {
        defaultCharacterEncoding = "UTF-8"
    }

    java {
        withSourcesJar()
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.encoding = "UTF-8"
        it.sourceCompatibility = JavaVersion.VERSION_1_8
        it.targetCompatibility = JavaVersion.VERSION_1_8
    }


    processResources {
        inputs.property("version", rootProject.version)
        filesMatching("fabric.mod.json") {
            expand(["version": rootProject.version])
        }
    }
}

subprojects {
    if (project.gradle.startParameter.taskNames.size() == 1 && project.gradle.startParameter.taskNames.get(0) == "runClient") {
        dependencies {
            modImplementation(rootProject)
        }
    } else {
        dependencies {
            implementation(rootProject)
        }
    }
}


jar {
    from("LICENSE") {
        rename({ return "${it}_${project.archives_base_name}" })
    }
}

import com.modrinth.minotaur.TaskModrinthUpload

task publishModrinth(type: TaskModrinthUpload) {
    onlyIf {
        System.getenv("MODRINTH") // Only attempt to run this task if the MODRINTH variable is set, otherwise SKIP it
    }
    token = System.getenv("MODRINTH")
    changelog = System.getenv("CHANGELOG")
    projectId = "CTIW5eos"
    versionNumber = "${project.mod_version}-${project.minecraft_version}"
    // On fabric, use "remapJar" instead of "jar"
    uploadFile = remapJar
    addGameVersion(project.minecraft_version as String)
    addLoader("fabric")
}